---
import jupiter from "../assets/jupiter.webp";
import collatz from "../assets/collatz.webp";
import collatz2 from "../assets/collatz2.webp";
import digital from "../assets/digital.webp";
import trees from "../assets/trees.webp";
import Base from "../components/Base.astro";
import Lightbox from "../components/Lightbox";
import GalleryImage from "../components/GalleryImage.astro";

const images = [
  {
    img: {
      ...digital,
      title: "Digital",
      description:
        "Generated by a shader using fractal brownian motion and a triangular noise function. " +
        "Dithering was used to introduce distortion.",
    },
    alt: "digital",
  },
  {
    img: {
      ...collatz,
      title: "Collatz 1",
      description:
        "The grid-like pattern here was created using the sequence of numbers generated by the " +
        "Collatz conjecture. Vertical and horizontal lines represent even and odd numbers, respectively.",
    },
    alt: "collatz",
  },
  {
    img: {
      ...trees,
      title: "Trees",
      description:
        "The trees in this image were created using a series of constraints that define " +
        "the possible shapes. Random lines were drawn along the screen and all lines which violated " +
        "the constraints were discarded.",
    },
    alt: "trees",
  },
  {
    img: {
      ...jupiter,
      title: "Jupiter",
      description:
        "Generated by a shader using fractal brownian motion and domain warping. " +
        "The great red spot was created using a traditional swirl effect, but additional " +
        "noise was added to the swirl equation, causing the smaller swirls to appear elsewhere in the image.",
    },
    alt: "jupiter",
  },
  {
    img: {
      ...collatz2,
      title: "Collatz 2",
      description:
        "Another series of lines drawn according to the sequence generated by the Collatz conjecture. " +
        "The cartesian coordinates were converted to polar coordinates and each shape was drawn using " +
        "a different series of trigonometric functions.",
    },
    alt: "collatz2",
  },
];
---

<script>
  import { galleryIndex } from "../scripts/gallery.ts";
  const setIndex = (index: number) => {
    galleryIndex.set(index);
  };
  for (const [i, value] of Array.from(
    document.getElementsByClassName("gallery-img"),
  ).entries()) {
    value.addEventListener("click", () => setIndex(i));
  }
</script>

<Base>
  <div class="pb-8">
    <div class="pt-18 md:pt-26 pb-8 px-[9vw] w-full">
      <p class="text-l md:text-xl prose dark:prose-invert max-w-full">
        The images shown here were created using
        <a href="https://pixijs.com">PixiJS</a> and GLSL shaders. Source code can
        be found
        <a
          href="https://github.com/aschey/generative-art/tree/main/generative-art/src/app/works"
        >
          here</a
        >.
      </p>
    </div>
    <div
      class="px-8 flex flex-col md:flex-row gap-6 justify-center items-center md:items-start"
    >
      <div class="flex flex-col gap-6 md:w-[55vw] items-center md:items-start">
        <GalleryImage {...images[0]} classList={["md:w-[50vw]"]} />
        <GalleryImage {...images[1]} classList={["md:w-[52vw]"]} />
        <GalleryImage {...images[2]} />
      </div>
      <div class="flex flex-col gap-6 md:w-[26vw] items-center md:items-end">
        <GalleryImage {...images[3]} />
        <GalleryImage {...images[4]} classList={["md:w-[20vw]"]} />
      </div>
    </div>
    <Lightbox images={images.map((i) => i.img)} client:only="preact" />
  </div>
</Base>
